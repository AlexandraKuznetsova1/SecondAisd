#include iostream
using namespace std;

struct elem{
	int val;
	elem next;
};

elem add(elem head, int x) {
	elem p = new elem;
	(p).val = x;
	p - next = head;
	return p;
}

void filling_out_the_sheet(elem head) {
	elem p = head;
	while (p != NULL) {
		cout  p - val   ;
		p = p - next;
	}
	cout  endl;
}

elem special_list() {
	return NULL;
}

bool checking_the_sheet(elem element, int n) {
	elem p = element;
	while (p != NULL) {
		if (n % p - val == 0) {
			return true;
		}
		p = p - next;
	}
	return false;
}

elem zoom_in(elem li) {
	elem new_list = special_list();
	while (li != NULL) {
		new_list = add(new_list, li - val);
		li = li - next;
	}
	return new_list;
}

int main() {
	int n, count = 1;
	cin  n;
	if (n  0) {
		elem list = special_list();
		int i = 2;
		list = add(list, i);
		while (count  n) {
			i++;
			if (!checking_the_sheet(list, i)) {
				list = add(list, i);
				count++;
			}
		}
		list = zoom_in(list);
		filling_out_the_sheet(list);
	}
	return 0;
}
